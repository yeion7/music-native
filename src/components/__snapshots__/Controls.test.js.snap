// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders test  render Controls component playing false and index 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingVertical": 10,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 5,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 0,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 5,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
</View>
`;

exports[`renders test  render Controls component playing false and without index 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingVertical": 10,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 0,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
</View>
`;

exports[`renders test  render Controls component playing true and index 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingVertical": 10,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 5,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 0,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "flex-start",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 5,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "space-between",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
</View>
`;

exports[`renders test  render Controls component playing true and without index 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingVertical": 10,
      },
      undefined,
    ]
  }
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": null,
        "borderBottomWidth": null,
        "borderColor": "#007aff",
        "borderLeftWidth": null,
        "borderRadius": 0,
        "borderRightWidth": null,
        "borderTopWidth": null,
        "elevation": 0,
        "flexDirection": "row",
        "height": 45,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 6,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 6,
        "shadowColor": null,
        "shadowOffset": null,
        "shadowOpacity": null,
        "shadowRadius": null,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
    />
  </View>
</View>
`;
